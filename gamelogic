import random
import time

# Constants
WIDTH = 20
HEIGHT = 20
SNAKE_CHAR = 'ðŸŸ©'
FOOD_CHAR = 'ðŸŸ¥'
EMPTY_CHAR = 'â¬œ'
DELAY = 0.5

# Snake class
class Snake:
    def __init__(self):
        self.body = [(WIDTH // 2, HEIGHT // 2)]
        self.direction = (0, 1)

    def move(self):
        head = self.body[0]
        new_head = (head[0] + self.direction[0], head[1] + self.direction[1])
        self.body.insert(0, new_head)
        self.body.pop()

    def grow(self):
        tail = self.body[-1]
        self.body.append(tail)

    def change_direction(self, direction):
        self.direction = direction

# Game class
class Game:
    def __init__(self):
        self.snake = Snake()
        self.food = self.generate_food()
        self.score = 0

    def generate_food(self):
        while True:
            food = (random.randint(0, WIDTH - 1), random.randint(0, HEIGHT - 1))
            if food not in self.snake.body:
                return food

    def update(self):
        self.snake.move()
        head = self.snake.body[0]

        if head[0] < 0 or head[0] >= WIDTH or head[1] < 0 or head[1] >= HEIGHT:
            return False

        if head in self.snake.body[1:]:
            return False

        if head == self.food:
            self.snake.grow()
            self.food = self.generate_food()
            self.score += 1

        return True

    def display(self):
        grid = [[EMPTY_CHAR] * WIDTH for _ in range(HEIGHT)]

        for x, y in self.snake.body:
            grid[y][x] = SNAKE_CHAR

        food_x, food_y = self.food
        grid[food_y][food_x] = FOOD_CHAR

        os.system('cls' if os.name == 'nt' else 'clear')
        print(f"Score: {self.score}")
        for row in grid:
            print(' '.join(row))

# Main game loop
def main():
    game = Game()

    while True:
        game.display()

        key = input().lower()
        if key == 'w':
            game.snake.change_direction((-1, 0))
        elif key == 's':
            game.snake.change_direction((1, 0))
        elif key == 'a':
            game.snake.change_direction((0, -1))
        elif key == 'd':
            game.snake.change_direction((0, 1))
        elif key == 'q':
            break

        if not game.update():
            print("Game Over!")
            break

        time.sleep(DELAY)

if __name__ == '__main__':
    main()